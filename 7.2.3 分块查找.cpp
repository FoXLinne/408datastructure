// 块内无序，块间有序

// 定义分块索引表
typedef int ElemType;

typedef struct {
    ElemType maxValue;
    int low, high;
}Index;

// 定义查找表
ElemType List[100];

// 顺序查找索引
// 给定目标，先遍历索引表，进入块内进行后续查找
// 进入块内未查找到，遍历超出分块范围，则查找失败

// 折半查找索引
// 给定目标，若目标直接包含在索引表内，则正常使用折半查找后，进入块内顺序查找
// 若目标并不直接包含在索引表内，直到折半查找停在 low > high，此时进入 low 所指的块内进行查找
// low 所指超出了索引表的范围，查找失败

// 平均查找长度（顺序查找索引）
// ASL = Li(Index) + Ls(SSList)
// Li = (b+1) / 2
// Ls = (s+1) / 2
// ASL = (s^2 + 2*s + n) / 2s，当 s = n^(1/2) 时，ASLmin = n^(1/2) + 1

// 平均查找长度（折半查找索引）
// ASL = (向上取整)(log^2(n+1)) + (s+1)/2
