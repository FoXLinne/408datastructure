typedef struct BiTNode{
    ElemType data;
    struct BitNode *lchild, *rchild;
}BiTNode, *BiTree;

void PreOrder(BiTree T){
    if(T != NULL){
        visit(T);
        PreOrder(T->lchild);
        PreOrder(T->rchild);
    }
}
//1. 若二叉树为空，则什么都不做
//2. 若二叉树非空
    //1. 访问根结点
    //2. 先序遍历左子树
    //3. 先序遍历右子树
//先序遍历，在第一次路过该结点时访问结点
//每个节点都会被路过三次

// 1. 若二叉树为空，则什么都不做
// 2. 若二叉树非空
    // 1. 先序遍历左子树
    // 2. 访问根结点
    // 3. 先序遍历右子树
// 中序遍历，在第二次路过该结点时访问结点
// 每个节点都会被路过三次

// 1. 若二叉树为空，则什么都不做
// 2. 若二叉树非空
    // 1. 先序遍历左子树
    // 2. 先序遍历右子树
    // 3. 访问根结点
// 先序遍历，在第三次路过该结点时访问结点
// 每个节点都会被路过三次